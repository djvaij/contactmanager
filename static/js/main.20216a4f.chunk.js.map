{"version":3,"sources":["context.js","components/contacts/Contact.jsx","components/contacts/Contacts.jsx","components/layout/TextInputGroup.jsx","components/contacts/AddContact.jsx","components/contacts/EditContact.jsx","components/layout/Header.jsx","components/pages/About.jsx","components/pages/NotFound.jsx","components/test/Test.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","inherits","createClass","key","value","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","style","cursor","onClick","float","color","bind","Link","to","Contacts","react","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","target","defineProperty","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","match","params","_ref2","_callee2","updContact","_context2","put","Header","branding","href","About","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","HashRouter","Header_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.20216a4f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios'\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch(action.type) {\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n      }\r\n    case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      }\r\n    case 'UPDATE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact.id === action.payload.id ? (contact = action.payload) : contact\r\n        )\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n\r\n    this.setState({contacts: res.data});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  onShowClick = () => {\r\n    this.setState({\r\n      showContactInfo: !this.state.showContactInfo\r\n    });\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n  \r\n      dispatch({type: 'DELETE_CONTACT', payload: id});\r\n    } catch (e) {\r\n      dispatch({type: 'DELETE_CONTACT', payload: id});\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}{' '}\r\n                <i\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{cursor: 'pointer'}}\r\n                  onClick={this.onShowClick}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{cursor: 'pointer', float: 'right', color: 'red'}}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`/contact/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt mx-3\"\r\n                    style={{cursor: 'pointer', float: 'right', color:'black'}}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (<ul className=\"list-group\">\r\n                <li className=\"list-group-item\">{email}</li>\r\n                <li className=\"list-group-item\">{phone}</li>\r\n              </ul>\r\n              ) : null}\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact\r\n","import React, { Component, Fragment } from 'react'\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger border border-danger px-3 d-inline-flex justify-content-center align-items-center text-uppercase\">Contact </span>\r\n                <span className=\"bg-danger text-white border border-danger px-3 d-inline-flex justify-content-center align-items-center text-uppercase\">List</span>\r\n              </h1>\r\n              {contacts.map(contact => \r\n                <Contact\r\n                  key={contact.id}\r\n                  contact={contact}\r\n                />\r\n              )}\r\n            </Fragment>\r\n        )}}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames('form-control form-control-lg', {'is-invalid': error})}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      { error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  )\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n};\r\n\r\nexport default TextInputGroup;","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\n// import uuid from 'uuid';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  }\r\n\r\n  onChange = ({target}) => this.setState({ [target.name]: target.value });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const {name, email, phone} = this.state;\r\n\r\n    if (name === '') {\r\n      this.setState({errors: { name: 'Name is required!' }});\r\n      return;\r\n    }\r\n\r\n    if (email === '') {\r\n      this.setState({errors: { email: 'Email is required!' }});\r\n      return;\r\n    }\r\n\r\n    if (phone === '') {\r\n      this.setState({errors: { phone: 'Phone is required!' }});\r\n      return;\r\n    }\r\n\r\n    const newContact = {name, email, phone};\r\n\r\n    const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact)\r\n\r\n    dispatch({type: 'ADD_CONTACT', payload: res.data})\r\n\r\n    // Clear State\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors} = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    placeholder=\"Enter Name...\"\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    placeholder=\"Enter Email...\"\r\n                    onChange={this.onChange}\r\n                    type=\"email\"\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    value={phone}\r\n                    placeholder=\"Enter Phone...\"\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\" />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\n// import uuid from 'uuid';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    const contact = res.data;\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  };\r\n\r\n  onChange = ({target}) => this.setState({ [target.name]: target.value });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const {name, email, phone} = this.state;\r\n\r\n    if (name === '') {\r\n      this.setState({errors: { name: 'Name is required!' }});\r\n      return;\r\n    }\r\n\r\n    if (email === '') {\r\n      this.setState({errors: { email: 'Email is required!' }});\r\n      return;\r\n    }\r\n\r\n    if (phone === '') {\r\n      this.setState({errors: { phone: 'Phone is required!' }});\r\n      return;\r\n    }\r\n\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n\r\n    dispatch({type: 'UPDATE_CONTACT', payload: res.data});\r\n\r\n    // Clear State\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors} = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    placeholder=\"Enter Name...\"\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    placeholder=\"Enter Email...\"\r\n                    onChange={this.onChange}\r\n                    type=\"email\"\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    value={phone}\r\n                    placeholder=\"Enter Phone...\"\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-light btn-block\" />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    const { branding } = this.props;\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n          <div className=\"container\">\r\n            <a href=\"/\" className=\"navbar-brand\">{branding}</a>\r\n            <div>\r\n              <ul className=\"navbar-nav mr-auto\">\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/\" className=\"nav-link\">\r\n                    <i className=\"fas fa-home\"></i> Home\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/contact/add\" className=\"nav-link\">\r\n                    <i className=\"fas fa-plus\"></i> Add\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/about\" className=\"nav-link\">\r\n                    <i className=\"fas fa-question\"></i> About\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nHeader.defaultProps = {\r\n  branding: 'My App'\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n}\r\n","import React from 'react';\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404 </span>Page Not Found\r\n      </h1>\r\n      <p className=\"lead\">\r\n        Sorry, this page does not exist\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: '',\r\n    body: ''\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n      .then(response => response.json())\r\n      .then(data => this.setState({\r\n        title: data.title,\r\n        body: data.body\r\n      }))\r\n  };\r\n\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport Contacts from \"./components/contacts/Contacts\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from './context';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header /> {/* branding=\"Contact Manager\" */}\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}